
PWM_blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000057c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000528  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000894  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000702  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000351  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000006c  00000000  00000000  00001900  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043e  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000219  00000000  00000000  00001daa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001fc3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
  78:	0c 94 92 02 	jmp	0x524	; 0x524 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z4initv>:
//questions: 


void init()
{
	DDRD |= (1 << DDD7); //set pin 7 as output in data-direction of port D
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	80 68       	ori	r24, 0x80	; 128
  84:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1 << PIND6); //set pin 6 of port D as output
  86:	8a b1       	in	r24, 0x0a	; 10
  88:	8f 7b       	andi	r24, 0xBF	; 191
  8a:	8a b9       	out	0x0a, r24	; 10
  8c:	08 95       	ret

0000008e <_Z13ledBrightnessd>:
}

void ledBrightness(const double duty)
{
  8e:	8f 92       	push	r8
  90:	9f 92       	push	r9
  92:	af 92       	push	r10
  94:	bf 92       	push	r11
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
	  double T = 10.0; //ms
	  //double dutyCycle = PWM/0.87; //ms
	  double onTime = duty * T; //ms
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	40 e2       	ldi	r20, 0x20	; 32
  a4:	51 e4       	ldi	r21, 0x41	; 65
  a6:	0e 94 25 02 	call	0x44a	; 0x44a <__mulsf3>
  aa:	6b 01       	movw	r12, r22
  ac:	7c 01       	movw	r14, r24
	  
	  //uint32_t onTimeint = static_cast<uint32_t>(onTime); //float to ms
	  if(onTime >= T)
  ae:	20 e0       	ldi	r18, 0x00	; 0
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	40 e2       	ldi	r20, 0x20	; 32
  b4:	51 e4       	ldi	r21, 0x41	; 65
  b6:	0e 94 20 02 	call	0x440	; 0x440 <__gesf2>
  ba:	88 23       	and	r24, r24
  bc:	44 f0       	brlt	.+16     	; 0xce <_Z13ledBrightnessd+0x40>
	  {
		  onTime = T; // protection so not negative
  be:	0f 2e       	mov	r0, r31
  c0:	c1 2c       	mov	r12, r1
  c2:	d1 2c       	mov	r13, r1
  c4:	f0 e2       	ldi	r31, 0x20	; 32
  c6:	ef 2e       	mov	r14, r31
  c8:	f1 e4       	ldi	r31, 0x41	; 65
  ca:	ff 2e       	mov	r15, r31
  cc:	f0 2d       	mov	r31, r0
	  }
	  
	  //PWM code:
	  PORTD |= (1<<PD7);
  ce:	8b b1       	in	r24, 0x0b	; 11
  d0:	80 68       	ori	r24, 0x80	; 128
  d2:	8b b9       	out	0x0b, r24	; 11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	4a e7       	ldi	r20, 0x7A	; 122
  da:	53 e4       	ldi	r21, 0x43	; 67
  dc:	c7 01       	movw	r24, r14
  de:	b6 01       	movw	r22, r12
  e0:	0e 94 25 02 	call	0x44a	; 0x44a <__mulsf3>
  e4:	4b 01       	movw	r8, r22
  e6:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	40 e8       	ldi	r20, 0x80	; 128
  ee:	5f e3       	ldi	r21, 0x3F	; 63
  f0:	0e 94 77 01 	call	0x2ee	; 0x2ee <__cmpsf2>
  f4:	88 23       	and	r24, r24
  f6:	1c f1       	brlt	.+70     	; 0x13e <_Z13ledBrightnessd+0xb0>
		__ticks = 1;
	else if (__tmp > 65535)
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	3f ef       	ldi	r19, 0xFF	; 255
  fc:	4f e7       	ldi	r20, 0x7F	; 127
  fe:	57 e4       	ldi	r21, 0x47	; 71
 100:	c5 01       	movw	r24, r10
 102:	b4 01       	movw	r22, r8
 104:	0e 94 20 02 	call	0x440	; 0x440 <__gesf2>
 108:	18 16       	cp	r1, r24
 10a:	a4 f4       	brge	.+40     	; 0x134 <_Z13ledBrightnessd+0xa6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 e2       	ldi	r20, 0x20	; 32
 112:	51 e4       	ldi	r21, 0x41	; 65
 114:	c7 01       	movw	r24, r14
 116:	b6 01       	movw	r22, r12
 118:	0e 94 25 02 	call	0x44a	; 0x44a <__mulsf3>
 11c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__fixunssfsi>
		while(__ticks)
 120:	61 15       	cp	r22, r1
 122:	71 05       	cpc	r23, r1
 124:	89 f0       	breq	.+34     	; 0x148 <_Z13ledBrightnessd+0xba>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 126:	89 e1       	ldi	r24, 0x19	; 25
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <_Z13ledBrightnessd+0x9c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 12e:	61 50       	subi	r22, 0x01	; 1
 130:	71 09       	sbc	r23, r1
 132:	f6 cf       	rjmp	.-20     	; 0x120 <_Z13ledBrightnessd+0x92>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 134:	c5 01       	movw	r24, r10
 136:	b4 01       	movw	r22, r8
 138:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__fixunssfsi>
 13c:	02 c0       	rjmp	.+4      	; 0x142 <_Z13ledBrightnessd+0xb4>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	cb 01       	movw	r24, r22
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <_Z13ledBrightnessd+0xb6>
	  _delay_ms(onTime);
	  if (onTime != T)
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e2       	ldi	r20, 0x20	; 32
 14e:	51 e4       	ldi	r21, 0x41	; 65
 150:	c7 01       	movw	r24, r14
 152:	b6 01       	movw	r22, r12
 154:	0e 94 77 01 	call	0x2ee	; 0x2ee <__cmpsf2>
 158:	88 23       	and	r24, r24
 15a:	09 f4       	brne	.+2      	; 0x15e <_Z13ledBrightnessd+0xd0>
 15c:	45 c0       	rjmp	.+138    	; 0x1e8 <_Z13ledBrightnessd+0x15a>
	  {
			PORTD &= ~(1<<PD7); //low
 15e:	8b b1       	in	r24, 0x0b	; 11
 160:	8f 77       	andi	r24, 0x7F	; 127
 162:	8b b9       	out	0x0b, r24	; 11
			_delay_ms(T-onTime);
 164:	a7 01       	movw	r20, r14
 166:	96 01       	movw	r18, r12
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e2       	ldi	r24, 0x20	; 32
 16e:	91 e4       	ldi	r25, 0x41	; 65
 170:	0e 94 0a 01 	call	0x214	; 0x214 <__subsf3>
 174:	4b 01       	movw	r8, r22
 176:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	4a e7       	ldi	r20, 0x7A	; 122
 17e:	53 e4       	ldi	r21, 0x43	; 67
 180:	0e 94 25 02 	call	0x44a	; 0x44a <__mulsf3>
 184:	6b 01       	movw	r12, r22
 186:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	40 e8       	ldi	r20, 0x80	; 128
 18e:	5f e3       	ldi	r21, 0x3F	; 63
 190:	0e 94 77 01 	call	0x2ee	; 0x2ee <__cmpsf2>
 194:	88 23       	and	r24, r24
 196:	1c f1       	brlt	.+70     	; 0x1de <_Z13ledBrightnessd+0x150>
		__ticks = 1;
	else if (__tmp > 65535)
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	3f ef       	ldi	r19, 0xFF	; 255
 19c:	4f e7       	ldi	r20, 0x7F	; 127
 19e:	57 e4       	ldi	r21, 0x47	; 71
 1a0:	c7 01       	movw	r24, r14
 1a2:	b6 01       	movw	r22, r12
 1a4:	0e 94 20 02 	call	0x440	; 0x440 <__gesf2>
 1a8:	18 16       	cp	r1, r24
 1aa:	a4 f4       	brge	.+40     	; 0x1d4 <_Z13ledBrightnessd+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	40 e2       	ldi	r20, 0x20	; 32
 1b2:	51 e4       	ldi	r21, 0x41	; 65
 1b4:	c5 01       	movw	r24, r10
 1b6:	b4 01       	movw	r22, r8
 1b8:	0e 94 25 02 	call	0x44a	; 0x44a <__mulsf3>
 1bc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__fixunssfsi>
		while(__ticks)
 1c0:	61 15       	cp	r22, r1
 1c2:	71 05       	cpc	r23, r1
 1c4:	89 f0       	breq	.+34     	; 0x1e8 <_Z13ledBrightnessd+0x15a>
 1c6:	89 e1       	ldi	r24, 0x19	; 25
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <_Z13ledBrightnessd+0x13c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ce:	61 50       	subi	r22, 0x01	; 1
 1d0:	71 09       	sbc	r23, r1
 1d2:	f6 cf       	rjmp	.-20     	; 0x1c0 <_Z13ledBrightnessd+0x132>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1d4:	c7 01       	movw	r24, r14
 1d6:	b6 01       	movw	r22, r12
 1d8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__fixunssfsi>
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <_Z13ledBrightnessd+0x154>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 1de:	61 e0       	ldi	r22, 0x01	; 1
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	cb 01       	movw	r24, r22
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <_Z13ledBrightnessd+0x156>
	  }
			

}
 1e8:	ff 90       	pop	r15
 1ea:	ef 90       	pop	r14
 1ec:	df 90       	pop	r13
 1ee:	cf 90       	pop	r12
 1f0:	bf 90       	pop	r11
 1f2:	af 90       	pop	r10
 1f4:	9f 90       	pop	r9
 1f6:	8f 90       	pop	r8
 1f8:	08 95       	ret

000001fa <main>:

int main(void)
{
	//initialize
	init();
 1fa:	0e 94 40 00 	call	0x80	; 0x80 <_Z4initv>
	PORTD &= ~(1<<PD7); //set pin 7 low
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	8f 77       	andi	r24, 0x7F	; 127
 202:	8b b9       	out	0x0b, r24	; 11
	double pwmPerc = 0;
	const double increase = 0.1;
	
	while (true) // run forever
	{
		pin6Value = (PIND & (1 << PD6)) >> PD6; // read pin 6 value, 0 if low, 1 if high
 204:	89 b1       	in	r24, 0x09	; 9
			a = 0; //reset speed
		}
		
		//soft blink:
		pwmPerc = (1 + sin(angle))*0.5; //math for blink
		ledBrightness(pwmPerc);
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	9f e3       	ldi	r25, 0x3F	; 63
 20e:	0e 94 47 00 	call	0x8e	; 0x8e <_Z13ledBrightnessd>
 212:	f8 cf       	rjmp	.-16     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>

00000214 <__subsf3>:
 214:	50 58       	subi	r21, 0x80	; 128

00000216 <__addsf3>:
 216:	bb 27       	eor	r27, r27
 218:	aa 27       	eor	r26, r26
 21a:	0e 94 22 01 	call	0x244	; 0x244 <__addsf3x>
 21e:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_round>
 222:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscA>
 226:	38 f0       	brcs	.+14     	; 0x236 <__addsf3+0x20>
 228:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscB>
 22c:	20 f0       	brcs	.+8      	; 0x236 <__addsf3+0x20>
 22e:	39 f4       	brne	.+14     	; 0x23e <__addsf3+0x28>
 230:	9f 3f       	cpi	r25, 0xFF	; 255
 232:	19 f4       	brne	.+6      	; 0x23a <__addsf3+0x24>
 234:	26 f4       	brtc	.+8      	; 0x23e <__addsf3+0x28>
 236:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_nan>
 23a:	0e f4       	brtc	.+2      	; 0x23e <__addsf3+0x28>
 23c:	e0 95       	com	r30
 23e:	e7 fb       	bst	r30, 7
 240:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>

00000244 <__addsf3x>:
 244:	e9 2f       	mov	r30, r25
 246:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_split3>
 24a:	58 f3       	brcs	.-42     	; 0x222 <__addsf3+0xc>
 24c:	ba 17       	cp	r27, r26
 24e:	62 07       	cpc	r22, r18
 250:	73 07       	cpc	r23, r19
 252:	84 07       	cpc	r24, r20
 254:	95 07       	cpc	r25, r21
 256:	20 f0       	brcs	.+8      	; 0x260 <__addsf3x+0x1c>
 258:	79 f4       	brne	.+30     	; 0x278 <__addsf3x+0x34>
 25a:	a6 f5       	brtc	.+104    	; 0x2c4 <__addsf3x+0x80>
 25c:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_zero>
 260:	0e f4       	brtc	.+2      	; 0x264 <__addsf3x+0x20>
 262:	e0 95       	com	r30
 264:	0b 2e       	mov	r0, r27
 266:	ba 2f       	mov	r27, r26
 268:	a0 2d       	mov	r26, r0
 26a:	0b 01       	movw	r0, r22
 26c:	b9 01       	movw	r22, r18
 26e:	90 01       	movw	r18, r0
 270:	0c 01       	movw	r0, r24
 272:	ca 01       	movw	r24, r20
 274:	a0 01       	movw	r20, r0
 276:	11 24       	eor	r1, r1
 278:	ff 27       	eor	r31, r31
 27a:	59 1b       	sub	r21, r25
 27c:	99 f0       	breq	.+38     	; 0x2a4 <__addsf3x+0x60>
 27e:	59 3f       	cpi	r21, 0xF9	; 249
 280:	50 f4       	brcc	.+20     	; 0x296 <__addsf3x+0x52>
 282:	50 3e       	cpi	r21, 0xE0	; 224
 284:	68 f1       	brcs	.+90     	; 0x2e0 <__addsf3x+0x9c>
 286:	1a 16       	cp	r1, r26
 288:	f0 40       	sbci	r31, 0x00	; 0
 28a:	a2 2f       	mov	r26, r18
 28c:	23 2f       	mov	r18, r19
 28e:	34 2f       	mov	r19, r20
 290:	44 27       	eor	r20, r20
 292:	58 5f       	subi	r21, 0xF8	; 248
 294:	f3 cf       	rjmp	.-26     	; 0x27c <__addsf3x+0x38>
 296:	46 95       	lsr	r20
 298:	37 95       	ror	r19
 29a:	27 95       	ror	r18
 29c:	a7 95       	ror	r26
 29e:	f0 40       	sbci	r31, 0x00	; 0
 2a0:	53 95       	inc	r21
 2a2:	c9 f7       	brne	.-14     	; 0x296 <__addsf3x+0x52>
 2a4:	7e f4       	brtc	.+30     	; 0x2c4 <__addsf3x+0x80>
 2a6:	1f 16       	cp	r1, r31
 2a8:	ba 0b       	sbc	r27, r26
 2aa:	62 0b       	sbc	r22, r18
 2ac:	73 0b       	sbc	r23, r19
 2ae:	84 0b       	sbc	r24, r20
 2b0:	ba f0       	brmi	.+46     	; 0x2e0 <__addsf3x+0x9c>
 2b2:	91 50       	subi	r25, 0x01	; 1
 2b4:	a1 f0       	breq	.+40     	; 0x2de <__addsf3x+0x9a>
 2b6:	ff 0f       	add	r31, r31
 2b8:	bb 1f       	adc	r27, r27
 2ba:	66 1f       	adc	r22, r22
 2bc:	77 1f       	adc	r23, r23
 2be:	88 1f       	adc	r24, r24
 2c0:	c2 f7       	brpl	.-16     	; 0x2b2 <__addsf3x+0x6e>
 2c2:	0e c0       	rjmp	.+28     	; 0x2e0 <__addsf3x+0x9c>
 2c4:	ba 0f       	add	r27, r26
 2c6:	62 1f       	adc	r22, r18
 2c8:	73 1f       	adc	r23, r19
 2ca:	84 1f       	adc	r24, r20
 2cc:	48 f4       	brcc	.+18     	; 0x2e0 <__addsf3x+0x9c>
 2ce:	87 95       	ror	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f7 95       	ror	r31
 2d8:	9e 3f       	cpi	r25, 0xFE	; 254
 2da:	08 f0       	brcs	.+2      	; 0x2de <__addsf3x+0x9a>
 2dc:	b0 cf       	rjmp	.-160    	; 0x23e <__addsf3+0x28>
 2de:	93 95       	inc	r25
 2e0:	88 0f       	add	r24, r24
 2e2:	08 f0       	brcs	.+2      	; 0x2e6 <__addsf3x+0xa2>
 2e4:	99 27       	eor	r25, r25
 2e6:	ee 0f       	add	r30, r30
 2e8:	97 95       	ror	r25
 2ea:	87 95       	ror	r24
 2ec:	08 95       	ret

000002ee <__cmpsf2>:
 2ee:	0e 94 ab 01 	call	0x356	; 0x356 <__fp_cmp>
 2f2:	08 f4       	brcc	.+2      	; 0x2f6 <__cmpsf2+0x8>
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	08 95       	ret

000002f8 <__fixunssfsi>:
 2f8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_splitA>
 2fc:	88 f0       	brcs	.+34     	; 0x320 <__fixunssfsi+0x28>
 2fe:	9f 57       	subi	r25, 0x7F	; 127
 300:	98 f0       	brcs	.+38     	; 0x328 <__fixunssfsi+0x30>
 302:	b9 2f       	mov	r27, r25
 304:	99 27       	eor	r25, r25
 306:	b7 51       	subi	r27, 0x17	; 23
 308:	b0 f0       	brcs	.+44     	; 0x336 <__fixunssfsi+0x3e>
 30a:	e1 f0       	breq	.+56     	; 0x344 <__fixunssfsi+0x4c>
 30c:	66 0f       	add	r22, r22
 30e:	77 1f       	adc	r23, r23
 310:	88 1f       	adc	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	1a f0       	brmi	.+6      	; 0x31c <__fixunssfsi+0x24>
 316:	ba 95       	dec	r27
 318:	c9 f7       	brne	.-14     	; 0x30c <__fixunssfsi+0x14>
 31a:	14 c0       	rjmp	.+40     	; 0x344 <__fixunssfsi+0x4c>
 31c:	b1 30       	cpi	r27, 0x01	; 1
 31e:	91 f0       	breq	.+36     	; 0x344 <__fixunssfsi+0x4c>
 320:	0e 94 19 02 	call	0x432	; 0x432 <__fp_zero>
 324:	b1 e0       	ldi	r27, 0x01	; 1
 326:	08 95       	ret
 328:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_zero>
 32c:	67 2f       	mov	r22, r23
 32e:	78 2f       	mov	r23, r24
 330:	88 27       	eor	r24, r24
 332:	b8 5f       	subi	r27, 0xF8	; 248
 334:	39 f0       	breq	.+14     	; 0x344 <__fixunssfsi+0x4c>
 336:	b9 3f       	cpi	r27, 0xF9	; 249
 338:	cc f3       	brlt	.-14     	; 0x32c <__fixunssfsi+0x34>
 33a:	86 95       	lsr	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b3 95       	inc	r27
 342:	d9 f7       	brne	.-10     	; 0x33a <__fixunssfsi+0x42>
 344:	3e f4       	brtc	.+14     	; 0x354 <__fixunssfsi+0x5c>
 346:	90 95       	com	r25
 348:	80 95       	com	r24
 34a:	70 95       	com	r23
 34c:	61 95       	neg	r22
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	08 95       	ret

00000356 <__fp_cmp>:
 356:	99 0f       	add	r25, r25
 358:	00 08       	sbc	r0, r0
 35a:	55 0f       	add	r21, r21
 35c:	aa 0b       	sbc	r26, r26
 35e:	e0 e8       	ldi	r30, 0x80	; 128
 360:	fe ef       	ldi	r31, 0xFE	; 254
 362:	16 16       	cp	r1, r22
 364:	17 06       	cpc	r1, r23
 366:	e8 07       	cpc	r30, r24
 368:	f9 07       	cpc	r31, r25
 36a:	c0 f0       	brcs	.+48     	; 0x39c <__fp_cmp+0x46>
 36c:	12 16       	cp	r1, r18
 36e:	13 06       	cpc	r1, r19
 370:	e4 07       	cpc	r30, r20
 372:	f5 07       	cpc	r31, r21
 374:	98 f0       	brcs	.+38     	; 0x39c <__fp_cmp+0x46>
 376:	62 1b       	sub	r22, r18
 378:	73 0b       	sbc	r23, r19
 37a:	84 0b       	sbc	r24, r20
 37c:	95 0b       	sbc	r25, r21
 37e:	39 f4       	brne	.+14     	; 0x38e <__fp_cmp+0x38>
 380:	0a 26       	eor	r0, r26
 382:	61 f0       	breq	.+24     	; 0x39c <__fp_cmp+0x46>
 384:	23 2b       	or	r18, r19
 386:	24 2b       	or	r18, r20
 388:	25 2b       	or	r18, r21
 38a:	21 f4       	brne	.+8      	; 0x394 <__fp_cmp+0x3e>
 38c:	08 95       	ret
 38e:	0a 26       	eor	r0, r26
 390:	09 f4       	brne	.+2      	; 0x394 <__fp_cmp+0x3e>
 392:	a1 40       	sbci	r26, 0x01	; 1
 394:	a6 95       	lsr	r26
 396:	8f ef       	ldi	r24, 0xFF	; 255
 398:	81 1d       	adc	r24, r1
 39a:	81 1d       	adc	r24, r1
 39c:	08 95       	ret

0000039e <__fp_inf>:
 39e:	97 f9       	bld	r25, 7
 3a0:	9f 67       	ori	r25, 0x7F	; 127
 3a2:	80 e8       	ldi	r24, 0x80	; 128
 3a4:	70 e0       	ldi	r23, 0x00	; 0
 3a6:	60 e0       	ldi	r22, 0x00	; 0
 3a8:	08 95       	ret

000003aa <__fp_nan>:
 3aa:	9f ef       	ldi	r25, 0xFF	; 255
 3ac:	80 ec       	ldi	r24, 0xC0	; 192
 3ae:	08 95       	ret

000003b0 <__fp_pscA>:
 3b0:	00 24       	eor	r0, r0
 3b2:	0a 94       	dec	r0
 3b4:	16 16       	cp	r1, r22
 3b6:	17 06       	cpc	r1, r23
 3b8:	18 06       	cpc	r1, r24
 3ba:	09 06       	cpc	r0, r25
 3bc:	08 95       	ret

000003be <__fp_pscB>:
 3be:	00 24       	eor	r0, r0
 3c0:	0a 94       	dec	r0
 3c2:	12 16       	cp	r1, r18
 3c4:	13 06       	cpc	r1, r19
 3c6:	14 06       	cpc	r1, r20
 3c8:	05 06       	cpc	r0, r21
 3ca:	08 95       	ret

000003cc <__fp_round>:
 3cc:	09 2e       	mov	r0, r25
 3ce:	03 94       	inc	r0
 3d0:	00 0c       	add	r0, r0
 3d2:	11 f4       	brne	.+4      	; 0x3d8 <__fp_round+0xc>
 3d4:	88 23       	and	r24, r24
 3d6:	52 f0       	brmi	.+20     	; 0x3ec <__fp_round+0x20>
 3d8:	bb 0f       	add	r27, r27
 3da:	40 f4       	brcc	.+16     	; 0x3ec <__fp_round+0x20>
 3dc:	bf 2b       	or	r27, r31
 3de:	11 f4       	brne	.+4      	; 0x3e4 <__fp_round+0x18>
 3e0:	60 ff       	sbrs	r22, 0
 3e2:	04 c0       	rjmp	.+8      	; 0x3ec <__fp_round+0x20>
 3e4:	6f 5f       	subi	r22, 0xFF	; 255
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	08 95       	ret

000003ee <__fp_split3>:
 3ee:	57 fd       	sbrc	r21, 7
 3f0:	90 58       	subi	r25, 0x80	; 128
 3f2:	44 0f       	add	r20, r20
 3f4:	55 1f       	adc	r21, r21
 3f6:	59 f0       	breq	.+22     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 3f8:	5f 3f       	cpi	r21, 0xFF	; 255
 3fa:	71 f0       	breq	.+28     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 3fc:	47 95       	ror	r20

000003fe <__fp_splitA>:
 3fe:	88 0f       	add	r24, r24
 400:	97 fb       	bst	r25, 7
 402:	99 1f       	adc	r25, r25
 404:	61 f0       	breq	.+24     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 406:	9f 3f       	cpi	r25, 0xFF	; 255
 408:	79 f0       	breq	.+30     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 40a:	87 95       	ror	r24
 40c:	08 95       	ret
 40e:	12 16       	cp	r1, r18
 410:	13 06       	cpc	r1, r19
 412:	14 06       	cpc	r1, r20
 414:	55 1f       	adc	r21, r21
 416:	f2 cf       	rjmp	.-28     	; 0x3fc <__fp_split3+0xe>
 418:	46 95       	lsr	r20
 41a:	f1 df       	rcall	.-30     	; 0x3fe <__fp_splitA>
 41c:	08 c0       	rjmp	.+16     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 41e:	16 16       	cp	r1, r22
 420:	17 06       	cpc	r1, r23
 422:	18 06       	cpc	r1, r24
 424:	99 1f       	adc	r25, r25
 426:	f1 cf       	rjmp	.-30     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 428:	86 95       	lsr	r24
 42a:	71 05       	cpc	r23, r1
 42c:	61 05       	cpc	r22, r1
 42e:	08 94       	sec
 430:	08 95       	ret

00000432 <__fp_zero>:
 432:	e8 94       	clt

00000434 <__fp_szero>:
 434:	bb 27       	eor	r27, r27
 436:	66 27       	eor	r22, r22
 438:	77 27       	eor	r23, r23
 43a:	cb 01       	movw	r24, r22
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

00000440 <__gesf2>:
 440:	0e 94 ab 01 	call	0x356	; 0x356 <__fp_cmp>
 444:	08 f4       	brcc	.+2      	; 0x448 <__gesf2+0x8>
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	08 95       	ret

0000044a <__mulsf3>:
 44a:	0e 94 38 02 	call	0x470	; 0x470 <__mulsf3x>
 44e:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_round>
 452:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscA>
 456:	38 f0       	brcs	.+14     	; 0x466 <__mulsf3+0x1c>
 458:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscB>
 45c:	20 f0       	brcs	.+8      	; 0x466 <__mulsf3+0x1c>
 45e:	95 23       	and	r25, r21
 460:	11 f0       	breq	.+4      	; 0x466 <__mulsf3+0x1c>
 462:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>
 466:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_nan>
 46a:	11 24       	eor	r1, r1
 46c:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_szero>

00000470 <__mulsf3x>:
 470:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_split3>
 474:	70 f3       	brcs	.-36     	; 0x452 <__mulsf3+0x8>

00000476 <__mulsf3_pse>:
 476:	95 9f       	mul	r25, r21
 478:	c1 f3       	breq	.-16     	; 0x46a <__mulsf3+0x20>
 47a:	95 0f       	add	r25, r21
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	55 1f       	adc	r21, r21
 480:	62 9f       	mul	r22, r18
 482:	f0 01       	movw	r30, r0
 484:	72 9f       	mul	r23, r18
 486:	bb 27       	eor	r27, r27
 488:	f0 0d       	add	r31, r0
 48a:	b1 1d       	adc	r27, r1
 48c:	63 9f       	mul	r22, r19
 48e:	aa 27       	eor	r26, r26
 490:	f0 0d       	add	r31, r0
 492:	b1 1d       	adc	r27, r1
 494:	aa 1f       	adc	r26, r26
 496:	64 9f       	mul	r22, r20
 498:	66 27       	eor	r22, r22
 49a:	b0 0d       	add	r27, r0
 49c:	a1 1d       	adc	r26, r1
 49e:	66 1f       	adc	r22, r22
 4a0:	82 9f       	mul	r24, r18
 4a2:	22 27       	eor	r18, r18
 4a4:	b0 0d       	add	r27, r0
 4a6:	a1 1d       	adc	r26, r1
 4a8:	62 1f       	adc	r22, r18
 4aa:	73 9f       	mul	r23, r19
 4ac:	b0 0d       	add	r27, r0
 4ae:	a1 1d       	adc	r26, r1
 4b0:	62 1f       	adc	r22, r18
 4b2:	83 9f       	mul	r24, r19
 4b4:	a0 0d       	add	r26, r0
 4b6:	61 1d       	adc	r22, r1
 4b8:	22 1f       	adc	r18, r18
 4ba:	74 9f       	mul	r23, r20
 4bc:	33 27       	eor	r19, r19
 4be:	a0 0d       	add	r26, r0
 4c0:	61 1d       	adc	r22, r1
 4c2:	23 1f       	adc	r18, r19
 4c4:	84 9f       	mul	r24, r20
 4c6:	60 0d       	add	r22, r0
 4c8:	21 1d       	adc	r18, r1
 4ca:	82 2f       	mov	r24, r18
 4cc:	76 2f       	mov	r23, r22
 4ce:	6a 2f       	mov	r22, r26
 4d0:	11 24       	eor	r1, r1
 4d2:	9f 57       	subi	r25, 0x7F	; 127
 4d4:	50 40       	sbci	r21, 0x00	; 0
 4d6:	9a f0       	brmi	.+38     	; 0x4fe <__mulsf3_pse+0x88>
 4d8:	f1 f0       	breq	.+60     	; 0x516 <__stack+0x17>
 4da:	88 23       	and	r24, r24
 4dc:	4a f0       	brmi	.+18     	; 0x4f0 <__mulsf3_pse+0x7a>
 4de:	ee 0f       	add	r30, r30
 4e0:	ff 1f       	adc	r31, r31
 4e2:	bb 1f       	adc	r27, r27
 4e4:	66 1f       	adc	r22, r22
 4e6:	77 1f       	adc	r23, r23
 4e8:	88 1f       	adc	r24, r24
 4ea:	91 50       	subi	r25, 0x01	; 1
 4ec:	50 40       	sbci	r21, 0x00	; 0
 4ee:	a9 f7       	brne	.-22     	; 0x4da <__mulsf3_pse+0x64>
 4f0:	9e 3f       	cpi	r25, 0xFE	; 254
 4f2:	51 05       	cpc	r21, r1
 4f4:	80 f0       	brcs	.+32     	; 0x516 <__stack+0x17>
 4f6:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>
 4fa:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_szero>
 4fe:	5f 3f       	cpi	r21, 0xFF	; 255
 500:	e4 f3       	brlt	.-8      	; 0x4fa <__mulsf3_pse+0x84>
 502:	98 3e       	cpi	r25, 0xE8	; 232
 504:	d4 f3       	brlt	.-12     	; 0x4fa <__mulsf3_pse+0x84>
 506:	86 95       	lsr	r24
 508:	77 95       	ror	r23
 50a:	67 95       	ror	r22
 50c:	b7 95       	ror	r27
 50e:	f7 95       	ror	r31
 510:	e7 95       	ror	r30
 512:	9f 5f       	subi	r25, 0xFF	; 255
 514:	c1 f7       	brne	.-16     	; 0x506 <__stack+0x7>
 516:	fe 2b       	or	r31, r30
 518:	88 0f       	add	r24, r24
 51a:	91 1d       	adc	r25, r1
 51c:	96 95       	lsr	r25
 51e:	87 95       	ror	r24
 520:	97 f9       	bld	r25, 7
 522:	08 95       	ret

00000524 <_exit>:
 524:	f8 94       	cli

00000526 <__stop_program>:
 526:	ff cf       	rjmp	.-2      	; 0x526 <__stop_program>
